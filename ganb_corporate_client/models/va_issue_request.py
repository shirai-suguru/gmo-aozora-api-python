# coding: utf-8

"""
    GMO Aozora Net Bank Open API

    <p>オープンAPI仕様書（PDF版）は下記リンクをご参照ください</p> <div>   <div style='display:inline-block;'><a style='text-decoration:none; font-weight:bold; color:#00b8d4;' href='https://gmo-aozora.com/api-cooperation/api-specification.html' target='_blank'>オープンAPI仕様書</a></div><div style='display:inline-block; margin-left:2px; left:2px; width:10px; height:10px; border-top:2px solid #00b8d4; border-right:2px solid #00b8d4; transparent;-webkit-transform:rotate(45deg); transform: rotate(45deg);'></div> </div> <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>共通仕様</h4> <div style='width:100%; margin:10px;'>   <p style='font-weight:bold; color:#616161;'>＜HTTPリクエストヘッダ＞</p>   <div style='display:table; margin-left:10px; background-color:#29659b;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff;'>項目</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; color:#fff;'>仕様</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>プロトコル</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>HTTP1.1/HTTPS</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>charset</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>UTF-8</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>content-type</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>application/json</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>domain_name</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>       本番環境：api.gmo-aozora.com</br>       開発環境：stg-api.gmo-aozora.com     </div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>メインURL</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>       https://{domain_name}/ganb/api/corporation/{version}</br>       <span style='border-bottom:solid 1px;'>Version:1.x.x</span> の場合</br>       　https://api.gmo-aozora.com/ganb/api/corporation/<span style='border-bottom:solid 1px;'>v1</span>     </div>   </div> </div> <div style='margin:20px 10px;'>   <p style='font-weight:bold; color:#616161;'>＜リクエスト共通仕様＞</p>   <p style='padding-left:20px; font-weight:bold; color:#616161;'>NULLデータの扱い</p>   <p style='padding-left:40px;'>パラメータの値が空の場合、またはパラメータ自体が設定されていない場合、どちらもNULLとして扱います</p> </div> <div style='margin:20px 10px;'>   <p style='font-weight:bold; color:#616161;'>＜レスポンス共通仕様＞</p>   <p style='padding-left:20px; font-weight:bold; color:#616161;'>NULLデータの扱い</p>   <ul>     <li>レスポンスデータ</li>       <ul>         <li style='list-style-type:none;'>レスポンスデータの値が空の場合または、レスポンスデータ自体が設定されない場合は「項目自体を設定しません」と記載</li>       </ul>     <li>配列</li>       <ul>         <li style='list-style-type:none;'>配列の要素の値が空の場合は「空のリスト」と記載</li>         <li style='list-style-type:none;'>配列自体が設定されない場合は「項目自体を設定しません」と記載</li>       </ul>   </ul> </div> <div style='margin:20px 10px;'>   <p style='font-weight:bold; color:#616161;'>＜更新系APIに関する注意事項＞</p>   <ul>     <li style='list-style-type:none;'>更新系処理がタイムアウトとなった場合、処理自体は実行されている可能性がありますので、</li>     <li style='list-style-type:none;'>再実行を行う必要がある場合は必ず照会系の処理で実行状況を確認してから再実行を行ってください</li>   </ul> </div>   # noqa: E501

    OpenAPI spec version: 1.15.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class VaIssueRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'va_type_code': 'str',
        'issue_request_count': 'str',
        'ra_id': 'str',
        'va_contract_auth_key': 'str',
        'va_holder_name_kana': 'str',
        'va_holder_name_pos': 'str'
    }

    attribute_map = {
        'va_type_code': 'vaTypeCode',
        'issue_request_count': 'issueRequestCount',
        'ra_id': 'raId',
        'va_contract_auth_key': 'vaContractAuthKey',
        'va_holder_name_kana': 'vaHolderNameKana',
        'va_holder_name_pos': 'vaHolderNamePos'
    }

    def __init__(self, va_type_code=None, issue_request_count=None, ra_id=None, va_contract_auth_key=None, va_holder_name_kana=None, va_holder_name_pos=None):  # noqa: E501
        """VaIssueRequest - a model defined in Swagger"""  # noqa: E501
        self._va_type_code = None
        self._issue_request_count = None
        self._ra_id = None
        self._va_contract_auth_key = None
        self._va_holder_name_kana = None
        self._va_holder_name_pos = None
        self.discriminator = None
        self.va_type_code = va_type_code
        self.issue_request_count = issue_request_count
        if ra_id is not None:
            self.ra_id = ra_id
        if va_contract_auth_key is not None:
            self.va_contract_auth_key = va_contract_auth_key
        if va_holder_name_kana is not None:
            self.va_holder_name_kana = va_holder_name_kana
        if va_holder_name_pos is not None:
            self.va_holder_name_pos = va_holder_name_pos

    @property
    def va_type_code(self):
        """Gets the va_type_code of this VaIssueRequest.  # noqa: E501

        振込入金口座　種類コード<br>半角数字<br>・1=期限型<br>・2=継続型<br>  # noqa: E501

        :return: The va_type_code of this VaIssueRequest.  # noqa: E501
        :rtype: str
        """
        return self._va_type_code

    @va_type_code.setter
    def va_type_code(self, va_type_code):
        """Sets the va_type_code of this VaIssueRequest.

        振込入金口座　種類コード<br>半角数字<br>・1=期限型<br>・2=継続型<br>  # noqa: E501

        :param va_type_code: The va_type_code of this VaIssueRequest.  # noqa: E501
        :type: str
        """
        if va_type_code is None:
            raise ValueError("Invalid value for `va_type_code`, must not be `None`")  # noqa: E501

        self._va_type_code = va_type_code

    @property
    def issue_request_count(self):
        """Gets the issue_request_count of this VaIssueRequest.  # noqa: E501

        発行口座数<br>半角数字<br>1回のリクエストで1,000口座まで発行可能<br>  # noqa: E501

        :return: The issue_request_count of this VaIssueRequest.  # noqa: E501
        :rtype: str
        """
        return self._issue_request_count

    @issue_request_count.setter
    def issue_request_count(self, issue_request_count):
        """Sets the issue_request_count of this VaIssueRequest.

        発行口座数<br>半角数字<br>1回のリクエストで1,000口座まで発行可能<br>  # noqa: E501

        :param issue_request_count: The issue_request_count of this VaIssueRequest.  # noqa: E501
        :type: str
        """
        if issue_request_count is None:
            raise ValueError("Invalid value for `issue_request_count`, must not be `None`")  # noqa: E501

        self._issue_request_count = issue_request_count

    @property
    def ra_id(self):
        """Gets the ra_id of this VaIssueRequest.  # noqa: E501

        入金口座ID<br>半角数字<br>科目コードが以下の口座IDのみ受け付けます<br>・01=普通預金（有利息）<br>・02=普通預金（決済用）<br>銀行契約の場合は必須<br>  # noqa: E501

        :return: The ra_id of this VaIssueRequest.  # noqa: E501
        :rtype: str
        """
        return self._ra_id

    @ra_id.setter
    def ra_id(self, ra_id):
        """Sets the ra_id of this VaIssueRequest.

        入金口座ID<br>半角数字<br>科目コードが以下の口座IDのみ受け付けます<br>・01=普通預金（有利息）<br>・02=普通預金（決済用）<br>銀行契約の場合は必須<br>  # noqa: E501

        :param ra_id: The ra_id of this VaIssueRequest.  # noqa: E501
        :type: str
        """

        self._ra_id = ra_id

    @property
    def va_contract_auth_key(self):
        """Gets the va_contract_auth_key of this VaIssueRequest.  # noqa: E501

        振込入金口座API認証情報<br>半角英数字<br>銀行契約の方はNULLを設定<br>提携企業の方が、契約された顧客の発行を依頼される場合は必須<br>提携企業以外の方が値を設定されている場合は「400 Bad Request」を返却<br>  # noqa: E501

        :return: The va_contract_auth_key of this VaIssueRequest.  # noqa: E501
        :rtype: str
        """
        return self._va_contract_auth_key

    @va_contract_auth_key.setter
    def va_contract_auth_key(self, va_contract_auth_key):
        """Sets the va_contract_auth_key of this VaIssueRequest.

        振込入金口座API認証情報<br>半角英数字<br>銀行契約の方はNULLを設定<br>提携企業の方が、契約された顧客の発行を依頼される場合は必須<br>提携企業以外の方が値を設定されている場合は「400 Bad Request」を返却<br>  # noqa: E501

        :param va_contract_auth_key: The va_contract_auth_key of this VaIssueRequest.  # noqa: E501
        :type: str
        """

        self._va_contract_auth_key = va_contract_auth_key

    @property
    def va_holder_name_kana(self):
        """Gets the va_holder_name_kana of this VaIssueRequest.  # noqa: E501

        追加名義カナ<br>半角文字<br>振込入金口座名義（※）に任意の文字を追加する場合は指定してください<br>※ご登録されている「法人名カナ」<br><br>追加名義カナで指定できる文字数 = 40 - 振込入金口座名義の文字数<br>合計が40文字を超える場合は、追加名義カナの後部から文字が削られます<br><br>・使用可能な記号は「/」、「(」、「)」、「.」、「,」、「-」<br>・一部の非許容文字は、許容文字に変換を行います<br>・濁点、半濁点は１文字として数えます<br>・追加名義カナを前につける場合、半角スペースは追加名義カナの右側に1文字のみ許容します<br>・追加名義カナを前につける場合、追加名義カナの左側に半角スペースは許容しません<br>・追加名義カナを前につける場合、追加名義カナの中に半角の連続スペースは許容しません  # noqa: E501

        :return: The va_holder_name_kana of this VaIssueRequest.  # noqa: E501
        :rtype: str
        """
        return self._va_holder_name_kana

    @va_holder_name_kana.setter
    def va_holder_name_kana(self, va_holder_name_kana):
        """Sets the va_holder_name_kana of this VaIssueRequest.

        追加名義カナ<br>半角文字<br>振込入金口座名義（※）に任意の文字を追加する場合は指定してください<br>※ご登録されている「法人名カナ」<br><br>追加名義カナで指定できる文字数 = 40 - 振込入金口座名義の文字数<br>合計が40文字を超える場合は、追加名義カナの後部から文字が削られます<br><br>・使用可能な記号は「/」、「(」、「)」、「.」、「,」、「-」<br>・一部の非許容文字は、許容文字に変換を行います<br>・濁点、半濁点は１文字として数えます<br>・追加名義カナを前につける場合、半角スペースは追加名義カナの右側に1文字のみ許容します<br>・追加名義カナを前につける場合、追加名義カナの左側に半角スペースは許容しません<br>・追加名義カナを前につける場合、追加名義カナの中に半角の連続スペースは許容しません  # noqa: E501

        :param va_holder_name_kana: The va_holder_name_kana of this VaIssueRequest.  # noqa: E501
        :type: str
        """

        self._va_holder_name_kana = va_holder_name_kana

    @property
    def va_holder_name_pos(self):
        """Gets the va_holder_name_pos of this VaIssueRequest.  # noqa: E501

        追加名義位置<br>半角数字<br>追加名義カナを口座名義の前につけるか後ろにつけるかの指定<br>・1=通常（後ろにつける）<br>・2=前につける<br>指定が無い場合は後ろにつけます<br>  # noqa: E501

        :return: The va_holder_name_pos of this VaIssueRequest.  # noqa: E501
        :rtype: str
        """
        return self._va_holder_name_pos

    @va_holder_name_pos.setter
    def va_holder_name_pos(self, va_holder_name_pos):
        """Sets the va_holder_name_pos of this VaIssueRequest.

        追加名義位置<br>半角数字<br>追加名義カナを口座名義の前につけるか後ろにつけるかの指定<br>・1=通常（後ろにつける）<br>・2=前につける<br>指定が無い場合は後ろにつけます<br>  # noqa: E501

        :param va_holder_name_pos: The va_holder_name_pos of this VaIssueRequest.  # noqa: E501
        :type: str
        """

        self._va_holder_name_pos = va_holder_name_pos

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(VaIssueRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, VaIssueRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
