# coding: utf-8

"""
    GMO Aozora Net Bank Open API

    <p>オープンAPI仕様書（PDF版）は下記リンクをご参照ください</p> <div>   <div style='display:inline-block;'><a style='text-decoration:none; font-weight:bold; color:#00b8d4;' href='https://gmo-aozora.com/api-cooperation/api-specification.html' target='_blank'>オープンAPI仕様書</a></div><div style='display:inline-block; margin-left:2px; left:2px; width:10px; height:10px; border-top:2px solid #00b8d4; border-right:2px solid #00b8d4; transparent;-webkit-transform:rotate(45deg); transform: rotate(45deg);'></div> </div> <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>共通仕様</h4> <div style='width:100%; margin:10px;'>   <p style='font-weight:bold; color:#616161;'>＜HTTPリクエストヘッダ＞</p>   <div style='display:table; margin-left:10px; background-color:#29659b;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff;'>項目</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; color:#fff;'>仕様</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>プロトコル</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>HTTP1.1/HTTPS</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>charset</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>UTF-8</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>content-type</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>application/json</div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>domain_name</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>       本番環境：api.gmo-aozora.com</br>       開発環境：stg-api.gmo-aozora.com     </div>   </div>   <div style='display:table; margin-left:10px;'>     <div style='display:table-cell; min-width:130px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>メインURL</div>     <div style='display:table-cell; width:85%; padding:9px; border:1px solid #fff; background-color:#f8f8f8;'>       https://{domain_name}/ganb/api/corporation/{version}</br>       <span style='border-bottom:solid 1px;'>Version:1.x.x</span> の場合</br>       　https://api.gmo-aozora.com/ganb/api/corporation/<span style='border-bottom:solid 1px;'>v1</span>     </div>   </div> </div> <div style='margin:20px 10px;'>   <p style='font-weight:bold; color:#616161;'>＜リクエスト共通仕様＞</p>   <p style='padding-left:20px; font-weight:bold; color:#616161;'>NULLデータの扱い</p>   <p style='padding-left:40px;'>パラメータの値が空の場合、またはパラメータ自体が設定されていない場合、どちらもNULLとして扱います</p> </div> <div style='margin:20px 10px;'>   <p style='font-weight:bold; color:#616161;'>＜レスポンス共通仕様＞</p>   <p style='padding-left:20px; font-weight:bold; color:#616161;'>NULLデータの扱い</p>   <ul>     <li>レスポンスデータ</li>       <ul>         <li style='list-style-type:none;'>レスポンスデータの値が空の場合または、レスポンスデータ自体が設定されない場合は「項目自体を設定しません」と記載</li>       </ul>     <li>配列</li>       <ul>         <li style='list-style-type:none;'>配列の要素の値が空の場合は「空のリスト」と記載</li>         <li style='list-style-type:none;'>配列自体が設定されない場合は「項目自体を設定しません」と記載</li>       </ul>   </ul> </div> <div style='margin:20px 10px;'>   <p style='font-weight:bold; color:#616161;'>＜更新系APIに関する注意事項＞</p>   <ul>     <li style='list-style-type:none;'>更新系処理がタイムアウトとなった場合、処理自体は実行されている可能性がありますので、</li>     <li style='list-style-type:none;'>再実行を行う必要がある場合は必ず照会系の処理で実行状況を確認してから再実行を行ってください</li>   </ul> </div>   # noqa: E501

    OpenAPI spec version: 1.15.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import re  # noqa: F401

# python 2 and python 3 compatibility library
import six

from ganb_corporate_client.api_client import ApiClient


class VirtualAccountApi(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    Ref: https://github.com/swagger-api/swagger-codegen
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

    def deposit_transactions_using_get(self, x_access_token, **kwargs):  # noqa: E501
        """振込入金口座入金明細照会  # noqa: E501

        <p>振込入金口座の入金明細を照会します</p> <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4> <div style='margin:10px;'>   <p style='font-weight:bold; color:#616161;'>取得上限件数</p>   <p style='padding-left:20px;'>500件</p>   <p style='padding-left:20px;'>取得できる明細数が500に満たないときは取得できる明細のみを返却します</p>   <p style='padding-left:20px;'>取得できる明細が存在しない場合は「200：OK」とし明細を返却しません</p> </div> <div style='margin:10px;'>   <p style='font-weight:bold; color:#616161;'>ページング</p>   <p style='padding-left:20px;'>2ページ目以降を照会する際は、初回と同じリクエスト内容に、初回レスポンスの次明細キーを追加してリクエストしてください</p> </div> <div style='margin:10px;'>   <p style='font-weight:bold; color:#616161;'>ソート順</p>   <p style='padding-left:20px;'>取引の昇順</p>   <p style='padding-left:20px;'>ソート順コードを指定することにより、ソート順を変更できます</p> </div> <div style='width:600px; margin:10px;'>   <p style='font-weight:bold; color:#616161;'>対象期間</p>   <div style='display:table; margin-left:20px; background-color:#29659b;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9315;</div>   </div>   <div style='display:table; margin-left:20px;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>対象期間From</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>   </div>   <div style='display:table; margin-left:20px;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>対象期間To</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>   </div> </div> <div style='margin:10px;'>   <ul>     <li style='list-style-type:none;'>&#9312;の場合　当日分の入金明細を返却</li>     <li style='list-style-type:none;'>&#9313;の場合　対象期間From(※1)　～　当日までの入金明細を返却</li>     <li style='list-style-type:none;'>&#9314;の場合　取引初回(※2)　～　対象期間To(※1)までの入金明細を返却</li>     <li style='list-style-type:none;'>&#9315;の場合　対象期間From(※1)　～　対象期間To(※1)までの入金明細を返却</li>     <li style='list-style-type:none; margin-left:10px;'>※1 : 照会する日付より6ヶ月以内の日付とし、超過する日付の場合は「400　Bad Request」を返却</li>     <li style='list-style-type:none; margin-left:10px;'>※2 : 照会する日付より6ヶ月以内の取引とし、それを超えた範囲は返却しません</li>    </ul> </div> <div style='width:600px; margin:10px;'>   <p style='font-weight:bold; color:#616161;'>入金口座ID、振込入金口座IDの設定別の仕様</p>   <div style='display:table; margin-left:20px; background-color:#29659b;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>   </div>   <div style='display:table; margin-left:20px;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>入金口座ID</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>   </div>   <div style='display:table; margin-left:20px;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>振込入金口座ID</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>   </div> </div> <div style='margin:10px;'>   <ul>     <li style='list-style-type:none;'>&#9312;の場合　入金口座IDに該当する入金明細を返却します</li>     <li style='list-style-type:none;'>&#9313;の場合　振込入金口座IDに該当する入金明細を返却します</li>     <li style='list-style-type:none;'>&#9314;の場合　振込入金口座IDが入金口座IDに紐付いているか判定を行い、OKであれば入金明細を返却し、NGであればエラーを返却します</li>   </ul> </div> <div style='margin-bottom:40px;' />   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.deposit_transactions_using_get(x_access_token, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str x_access_token: アクセストークン (required)
        :param str va_contract_auth_key: 振込入金口座API認証情報<br>半角英数字<br>銀行契約の方はNULLを設定<br>提携企業の方が、契約された顧客の入金明細照会を依頼される場合は必須<br>提携企業以外の方が値を設定されている場合は「400 Bad Request」を返却
        :param str ra_id: 入金口座ID<br>半角数字<br>入金先の口座を識別するID<br>本値が設定されていない場合、振込入金口座IDは必須<br>科目コードが以下の口座IDのみ受け付けます<br>・01=普通預金（有利息）<br>・02=普通預金（決済用）
        :param str va_id: 振込入金口座ID<br>半角数字<br>振込入金口座を識別するID<br>本値が設定されていない場合、入金口座IDは必須
        :param str date_from: 対象期間From<br>半角文字<br>YYYY-MM-DD形式<br>指定する場合は照会する日付より6ヶ月以内の日付とし、超えた場合は「400 Bad Request」を返却
        :param str date_to: 対象期間To<br>半角文字<br>YYYY-MM-DD形式<br>指定する場合は照会する日付より6ヶ月以内の日付とし、超えた場合は「400 Bad Request」を返却<br>対象期間Fromと対象期間Toを指定する場合は、対象期間From≦対象期間Toとし、それ以外は「400 Bad Request」を返却
        :param str sort_order_code: ソート順コード<br>半角数字<br>取引日のソート順を指定するコード値<br>・1=昇順<br>・2=降順
        :param str next_item_key: 次明細キー<br>半角数字<br>初回要求時は未設定<br>初回応答で次明細キーが「true」の場合、返却された同項目を2回目以降に設定
        :return: VaDepositTransactionsResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.deposit_transactions_using_get_with_http_info(x_access_token, **kwargs)  # noqa: E501
        else:
            (data) = self.deposit_transactions_using_get_with_http_info(x_access_token, **kwargs)  # noqa: E501
            return data

    def deposit_transactions_using_get_with_http_info(self, x_access_token, **kwargs):  # noqa: E501
        """振込入金口座入金明細照会  # noqa: E501

        <p>振込入金口座の入金明細を照会します</p> <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4> <div style='margin:10px;'>   <p style='font-weight:bold; color:#616161;'>取得上限件数</p>   <p style='padding-left:20px;'>500件</p>   <p style='padding-left:20px;'>取得できる明細数が500に満たないときは取得できる明細のみを返却します</p>   <p style='padding-left:20px;'>取得できる明細が存在しない場合は「200：OK」とし明細を返却しません</p> </div> <div style='margin:10px;'>   <p style='font-weight:bold; color:#616161;'>ページング</p>   <p style='padding-left:20px;'>2ページ目以降を照会する際は、初回と同じリクエスト内容に、初回レスポンスの次明細キーを追加してリクエストしてください</p> </div> <div style='margin:10px;'>   <p style='font-weight:bold; color:#616161;'>ソート順</p>   <p style='padding-left:20px;'>取引の昇順</p>   <p style='padding-left:20px;'>ソート順コードを指定することにより、ソート順を変更できます</p> </div> <div style='width:600px; margin:10px;'>   <p style='font-weight:bold; color:#616161;'>対象期間</p>   <div style='display:table; margin-left:20px; background-color:#29659b;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9315;</div>   </div>   <div style='display:table; margin-left:20px;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>対象期間From</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>   </div>   <div style='display:table; margin-left:20px;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>対象期間To</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>   </div> </div> <div style='margin:10px;'>   <ul>     <li style='list-style-type:none;'>&#9312;の場合　当日分の入金明細を返却</li>     <li style='list-style-type:none;'>&#9313;の場合　対象期間From(※1)　～　当日までの入金明細を返却</li>     <li style='list-style-type:none;'>&#9314;の場合　取引初回(※2)　～　対象期間To(※1)までの入金明細を返却</li>     <li style='list-style-type:none;'>&#9315;の場合　対象期間From(※1)　～　対象期間To(※1)までの入金明細を返却</li>     <li style='list-style-type:none; margin-left:10px;'>※1 : 照会する日付より6ヶ月以内の日付とし、超過する日付の場合は「400　Bad Request」を返却</li>     <li style='list-style-type:none; margin-left:10px;'>※2 : 照会する日付より6ヶ月以内の取引とし、それを超えた範囲は返却しません</li>    </ul> </div> <div style='width:600px; margin:10px;'>   <p style='font-weight:bold; color:#616161;'>入金口座ID、振込入金口座IDの設定別の仕様</p>   <div style='display:table; margin-left:20px; background-color:#29659b;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>   </div>   <div style='display:table; margin-left:20px;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>入金口座ID</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>   </div>   <div style='display:table; margin-left:20px;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>振込入金口座ID</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>   </div> </div> <div style='margin:10px;'>   <ul>     <li style='list-style-type:none;'>&#9312;の場合　入金口座IDに該当する入金明細を返却します</li>     <li style='list-style-type:none;'>&#9313;の場合　振込入金口座IDに該当する入金明細を返却します</li>     <li style='list-style-type:none;'>&#9314;の場合　振込入金口座IDが入金口座IDに紐付いているか判定を行い、OKであれば入金明細を返却し、NGであればエラーを返却します</li>   </ul> </div> <div style='margin-bottom:40px;' />   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.deposit_transactions_using_get_with_http_info(x_access_token, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str x_access_token: アクセストークン (required)
        :param str va_contract_auth_key: 振込入金口座API認証情報<br>半角英数字<br>銀行契約の方はNULLを設定<br>提携企業の方が、契約された顧客の入金明細照会を依頼される場合は必須<br>提携企業以外の方が値を設定されている場合は「400 Bad Request」を返却
        :param str ra_id: 入金口座ID<br>半角数字<br>入金先の口座を識別するID<br>本値が設定されていない場合、振込入金口座IDは必須<br>科目コードが以下の口座IDのみ受け付けます<br>・01=普通預金（有利息）<br>・02=普通預金（決済用）
        :param str va_id: 振込入金口座ID<br>半角数字<br>振込入金口座を識別するID<br>本値が設定されていない場合、入金口座IDは必須
        :param str date_from: 対象期間From<br>半角文字<br>YYYY-MM-DD形式<br>指定する場合は照会する日付より6ヶ月以内の日付とし、超えた場合は「400 Bad Request」を返却
        :param str date_to: 対象期間To<br>半角文字<br>YYYY-MM-DD形式<br>指定する場合は照会する日付より6ヶ月以内の日付とし、超えた場合は「400 Bad Request」を返却<br>対象期間Fromと対象期間Toを指定する場合は、対象期間From≦対象期間Toとし、それ以外は「400 Bad Request」を返却
        :param str sort_order_code: ソート順コード<br>半角数字<br>取引日のソート順を指定するコード値<br>・1=昇順<br>・2=降順
        :param str next_item_key: 次明細キー<br>半角数字<br>初回要求時は未設定<br>初回応答で次明細キーが「true」の場合、返却された同項目を2回目以降に設定
        :return: VaDepositTransactionsResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['x_access_token', 'va_contract_auth_key', 'ra_id', 'va_id', 'date_from', 'date_to', 'sort_order_code', 'next_item_key']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method deposit_transactions_using_get" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'x_access_token' is set
        if ('x_access_token' not in params or
                params['x_access_token'] is None):
            raise ValueError("Missing the required parameter `x_access_token` when calling `deposit_transactions_using_get`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []
        if 'va_contract_auth_key' in params:
            query_params.append(('vaContractAuthKey', params['va_contract_auth_key']))  # noqa: E501
        if 'ra_id' in params:
            query_params.append(('raId', params['ra_id']))  # noqa: E501
        if 'va_id' in params:
            query_params.append(('vaId', params['va_id']))  # noqa: E501
        if 'date_from' in params:
            query_params.append(('dateFrom', params['date_from']))  # noqa: E501
        if 'date_to' in params:
            query_params.append(('dateTo', params['date_to']))  # noqa: E501
        if 'sort_order_code' in params:
            query_params.append(('sortOrderCode', params['sort_order_code']))  # noqa: E501
        if 'next_item_key' in params:
            query_params.append(('nextItemKey', params['next_item_key']))  # noqa: E501

        header_params = {}
        if 'x_access_token' in params:
            header_params['x-access-token'] = params['x_access_token']  # noqa: E501

        form_params = []
        local_var_files = {}

        body_params = None
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json;charset=UTF-8'])  # noqa: E501

        # Authentication setting
        auth_settings = []  # noqa: E501

        return self.api_client.call_api(
            '/va/deposit-transactions', 'GET',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='VaDepositTransactionsResponse',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def issue_using_post(self, x_access_token, **kwargs):  # noqa: E501
        """振込入金口座発行  # noqa: E501

        <p>振込入金口座の発行を行います</p> <p><font color=\"red\">※銀行システムのメンテナンス時は本APIを実行することができないため、予め余分に振込入金口座を発行してプールしておくことをお勧めします</font></p> <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4> <div style='margin:10px;'>   <p style='font-weight:bold; color:#616161;'>発行上限数</p>   <p style='padding-left:20px;'>1リクエスト　：　1000口座まで</p> </div> <div style='margin:10px;'>   <p style='font-weight:bold; color:#616161;'>追加名義カナを前につける際の半角スペースについて</p>   <ul type='square'>     <li style='margin:10px;'>       <p>追加名義カナの右側は1文字のみ許容します</p>       <div>         <div style='display:table;'>           <div style='display:table-cell; width:50px; padding:2px;'>例）</div>           <div style='display:table-cell; width:50px; padding:2px; font-size:120%; text-align:center;'>○</div>           <div style=\"display:table-cell; padding:2px; text-align:center;\"><pre style=\"width:150px; padding:10px 0px\">「ﾃｽﾄﾆｭｳｷﾝｸﾞﾁ 」</pre></div>         </div>         <div style='display:table;'>           <div style='display:table-cell; width:50px; padding:2px;'></div>           <div style='display:table-cell; width:50px; padding:2px; font-size:120%; text-align:center;'>×</div>           <div style=\"display:table-cell; padding:2px; text-align:center;\"><pre style=\"width:150px; padding:10px 0px\">「ﾃｽﾄﾆｭｳｷﾝｸﾞﾁ  」</pre></div>         </div>       </div>     </li>     <li style='margin:10px;'>       <p>追加名義カナの左側は許容しません</p>       <div>         <div style='display:table;'>           <div style='display:table-cell; width:50px; padding:2px;'>例）</div>           <div style='display:table-cell; width:50px; padding:2px; font-size:120%; text-align:center;'>○</div>           <div style=\"display:table-cell; padding:2px; text-align:center;\"><pre style=\"width:150px; padding:10px 0px\">「ﾃｽﾄﾆｭｳｷﾝｸﾞﾁ」</pre></div>         </div>         <div style='display:table;'>           <div style='display:table-cell; width:50px; padding:2px;'></div>           <div style='display:table-cell; width:50px; padding:2px; font-size:120%; text-align:center;'>×</div>           <div style=\"display:table-cell; padding:2px; text-align:center;\"><pre style=\"width:150px; padding:10px 0px\">「 ﾃｽﾄﾆｭｳｷﾝｸﾞﾁ」</pre></div>         </div>       </div>     </li>     <li style='margin:10px;'>       <p>連続スペースは許容しません</p>       <div>         <div style='display:table;'>           <div style='display:table-cell; width:50px; padding:2px;'>例）</div>           <div style='display:table-cell; width:50px; padding:2px; font-size:120%; text-align:center;'>○</div>           <div style=\"display:table-cell; padding:2px; text-align:center;\"><pre style=\"width:150px; padding:10px 0px\">「ﾃｽ ﾄﾆｭｳ ｷﾝｸﾞﾁ」</pre></div>         </div>         <div style='display:table;'>           <div style='display:table-cell; width:50px; padding:2px;'></div>           <div style='display:table-cell; width:50px; padding:2px; font-size:120%; text-align:center;'>×</div>           <div style=\"display:table-cell; padding:2px; text-align:center;\"><pre style=\"width:150px; padding:10px 0px\">「ﾃｽ  ﾄﾆｭｳｷﾝｸﾞﾁ」</pre></div>         </div>       </div>     </li>   </ul> </div> <div style='margin-bottom:40px;' />   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.issue_using_post(x_access_token, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str x_access_token: アクセストークン (required)
        :param VaIssueRequest body: HTTPリクエストボディ
        :return: VaIssueResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.issue_using_post_with_http_info(x_access_token, **kwargs)  # noqa: E501
        else:
            (data) = self.issue_using_post_with_http_info(x_access_token, **kwargs)  # noqa: E501
            return data

    def issue_using_post_with_http_info(self, x_access_token, **kwargs):  # noqa: E501
        """振込入金口座発行  # noqa: E501

        <p>振込入金口座の発行を行います</p> <p><font color=\"red\">※銀行システムのメンテナンス時は本APIを実行することができないため、予め余分に振込入金口座を発行してプールしておくことをお勧めします</font></p> <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4> <div style='margin:10px;'>   <p style='font-weight:bold; color:#616161;'>発行上限数</p>   <p style='padding-left:20px;'>1リクエスト　：　1000口座まで</p> </div> <div style='margin:10px;'>   <p style='font-weight:bold; color:#616161;'>追加名義カナを前につける際の半角スペースについて</p>   <ul type='square'>     <li style='margin:10px;'>       <p>追加名義カナの右側は1文字のみ許容します</p>       <div>         <div style='display:table;'>           <div style='display:table-cell; width:50px; padding:2px;'>例）</div>           <div style='display:table-cell; width:50px; padding:2px; font-size:120%; text-align:center;'>○</div>           <div style=\"display:table-cell; padding:2px; text-align:center;\"><pre style=\"width:150px; padding:10px 0px\">「ﾃｽﾄﾆｭｳｷﾝｸﾞﾁ 」</pre></div>         </div>         <div style='display:table;'>           <div style='display:table-cell; width:50px; padding:2px;'></div>           <div style='display:table-cell; width:50px; padding:2px; font-size:120%; text-align:center;'>×</div>           <div style=\"display:table-cell; padding:2px; text-align:center;\"><pre style=\"width:150px; padding:10px 0px\">「ﾃｽﾄﾆｭｳｷﾝｸﾞﾁ  」</pre></div>         </div>       </div>     </li>     <li style='margin:10px;'>       <p>追加名義カナの左側は許容しません</p>       <div>         <div style='display:table;'>           <div style='display:table-cell; width:50px; padding:2px;'>例）</div>           <div style='display:table-cell; width:50px; padding:2px; font-size:120%; text-align:center;'>○</div>           <div style=\"display:table-cell; padding:2px; text-align:center;\"><pre style=\"width:150px; padding:10px 0px\">「ﾃｽﾄﾆｭｳｷﾝｸﾞﾁ」</pre></div>         </div>         <div style='display:table;'>           <div style='display:table-cell; width:50px; padding:2px;'></div>           <div style='display:table-cell; width:50px; padding:2px; font-size:120%; text-align:center;'>×</div>           <div style=\"display:table-cell; padding:2px; text-align:center;\"><pre style=\"width:150px; padding:10px 0px\">「 ﾃｽﾄﾆｭｳｷﾝｸﾞﾁ」</pre></div>         </div>       </div>     </li>     <li style='margin:10px;'>       <p>連続スペースは許容しません</p>       <div>         <div style='display:table;'>           <div style='display:table-cell; width:50px; padding:2px;'>例）</div>           <div style='display:table-cell; width:50px; padding:2px; font-size:120%; text-align:center;'>○</div>           <div style=\"display:table-cell; padding:2px; text-align:center;\"><pre style=\"width:150px; padding:10px 0px\">「ﾃｽ ﾄﾆｭｳ ｷﾝｸﾞﾁ」</pre></div>         </div>         <div style='display:table;'>           <div style='display:table-cell; width:50px; padding:2px;'></div>           <div style='display:table-cell; width:50px; padding:2px; font-size:120%; text-align:center;'>×</div>           <div style=\"display:table-cell; padding:2px; text-align:center;\"><pre style=\"width:150px; padding:10px 0px\">「ﾃｽ  ﾄﾆｭｳｷﾝｸﾞﾁ」</pre></div>         </div>       </div>     </li>   </ul> </div> <div style='margin-bottom:40px;' />   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.issue_using_post_with_http_info(x_access_token, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str x_access_token: アクセストークン (required)
        :param VaIssueRequest body: HTTPリクエストボディ
        :return: VaIssueResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['x_access_token', 'body']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method issue_using_post" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'x_access_token' is set
        if ('x_access_token' not in params or
                params['x_access_token'] is None):
            raise ValueError("Missing the required parameter `x_access_token` when calling `issue_using_post`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []

        header_params = {}
        if 'x_access_token' in params:
            header_params['x-access-token'] = params['x_access_token']  # noqa: E501

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json;charset=UTF-8'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json;charset=UTF-8'])  # noqa: E501

        # Authentication setting
        auth_settings = []  # noqa: E501

        return self.api_client.call_api(
            '/va/issue', 'POST',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='VaIssueResponse',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def status_change_using_post(self, x_access_token, **kwargs):  # noqa: E501
        """振込入金口座状態変更  # noqa: E501

        <p>振込入金口座の状態変更（停止・再開・削除）を行います</p> <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4> <div style='margin:10px;'>   <p style='font-weight:bold; color:#616161;'>状態変更上限数</p>   <p style='padding-left:20px;'>1リクエスト　：　100口座まで</p> </div> <div style='margin-bottom:40px;' />   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.status_change_using_post(x_access_token, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str x_access_token: アクセストークン (required)
        :param VaStatusChangeRequest body: HTTPリクエストボディ
        :return: VaStatusChangeResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.status_change_using_post_with_http_info(x_access_token, **kwargs)  # noqa: E501
        else:
            (data) = self.status_change_using_post_with_http_info(x_access_token, **kwargs)  # noqa: E501
            return data

    def status_change_using_post_with_http_info(self, x_access_token, **kwargs):  # noqa: E501
        """振込入金口座状態変更  # noqa: E501

        <p>振込入金口座の状態変更（停止・再開・削除）を行います</p> <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4> <div style='margin:10px;'>   <p style='font-weight:bold; color:#616161;'>状態変更上限数</p>   <p style='padding-left:20px;'>1リクエスト　：　100口座まで</p> </div> <div style='margin-bottom:40px;' />   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.status_change_using_post_with_http_info(x_access_token, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str x_access_token: アクセストークン (required)
        :param VaStatusChangeRequest body: HTTPリクエストボディ
        :return: VaStatusChangeResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['x_access_token', 'body']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method status_change_using_post" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'x_access_token' is set
        if ('x_access_token' not in params or
                params['x_access_token'] is None):
            raise ValueError("Missing the required parameter `x_access_token` when calling `status_change_using_post`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []

        header_params = {}
        if 'x_access_token' in params:
            header_params['x-access-token'] = params['x_access_token']  # noqa: E501

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json;charset=UTF-8'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json;charset=UTF-8'])  # noqa: E501

        # Authentication setting
        auth_settings = []  # noqa: E501

        return self.api_client.call_api(
            '/va/status-change', 'POST',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='VaStatusChangeResponse',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def va_close_request_using_post(self, x_access_token, **kwargs):  # noqa: E501
        """振込入金口座解約申込  # noqa: E501

        <p>振込入金口座契約の解約申込を行います</p> <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4> <div style='margin:10px;'>   <p style='padding-left:20px;'>解約は解約受付月の月末に行われます</p> </div>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.va_close_request_using_post(x_access_token, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str x_access_token: アクセストークン (required)
        :param VaCloseRequest body: HTTPリクエストボディ
        :return: VaCloseRequestResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.va_close_request_using_post_with_http_info(x_access_token, **kwargs)  # noqa: E501
        else:
            (data) = self.va_close_request_using_post_with_http_info(x_access_token, **kwargs)  # noqa: E501
            return data

    def va_close_request_using_post_with_http_info(self, x_access_token, **kwargs):  # noqa: E501
        """振込入金口座解約申込  # noqa: E501

        <p>振込入金口座契約の解約申込を行います</p> <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4> <div style='margin:10px;'>   <p style='padding-left:20px;'>解約は解約受付月の月末に行われます</p> </div>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.va_close_request_using_post_with_http_info(x_access_token, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str x_access_token: アクセストークン (required)
        :param VaCloseRequest body: HTTPリクエストボディ
        :return: VaCloseRequestResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['x_access_token', 'body']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method va_close_request_using_post" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'x_access_token' is set
        if ('x_access_token' not in params or
                params['x_access_token'] is None):
            raise ValueError("Missing the required parameter `x_access_token` when calling `va_close_request_using_post`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []

        header_params = {}
        if 'x_access_token' in params:
            header_params['x-access-token'] = params['x_access_token']  # noqa: E501

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json;charset=UTF-8'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json;charset=UTF-8'])  # noqa: E501

        # Authentication setting
        auth_settings = []  # noqa: E501

        return self.api_client.call_api(
            '/va/close-request', 'POST',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='VaCloseRequestResponse',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def va_list_using_post(self, x_access_token, **kwargs):  # noqa: E501
        """振込入金口座一覧照会  # noqa: E501

        <p>発行済みの振込入金口座の一覧を照会します</p> <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4> <div style='margin:10px;'>   <p style='font-weight:bold; color:#616161;'>リクエストボディの振込入金口座IDリスト上限件数</p>   <p style='padding-left:20px;'>500件</p> </div> <div style='margin:10px;'>   <p style='font-weight:bold; color:#616161;'>取得上限件数</p>   <p style='padding-left:20px;'>500件</p>   <p style='padding-left:20px;'>取得できる明細数が500に満たないときは取得できる明細のみを返却します</p>   <p style='padding-left:20px;'>取得できる明細が存在しない場合は「200：OK」とし明細を返却しません</p> </div> <div style='margin:10px;'>   <p style='font-weight:bold; color:#616161;'>ページング</p>   <p style='padding-left:20px;'>2ページ目以降を照会する際は、初回と同じリクエスト内容に、初回レスポンスの次一覧キーを追加してリクエストしてください</p> </div> <div style='margin:10px;'>   <p style='font-weight:bold; color:#616161;'>ソート順</p>   <p style='padding-left:20px;'>発行日時 昇順</p> </div> <div style='width:600px; margin:10px;'>   <p style='font-weight:bold; color:#616161;'>クエリパラメーター　最終入金日</p>   <div style='display:table; margin-left:20px; background-color:#29659b;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9315;</div>   </div>   <div style='display:table; margin-left:20px;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>最終入金日From</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>   </div>   <div style='display:table; margin-left:20px;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>最終入金日To</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>   </div> </div> <div style='margin:10px;'>   <ul>     <li style='list-style-type:none;'>&#9312;の場合　絞りこみ条件なし</li>     <li style='list-style-type:none;'>&#9313;の場合　最終入金日From　～　当日までの振込入金口座情報を返却</li>     <li style='list-style-type:none;'>&#9314;の場合　最も過去となる最終入金日　～　最終入金日Toまでの振込入金口座情報を返却</li>     <li style='list-style-type:none;'>&#9315;の場合　最終入金日From　～　最終入金日Toまでの振込入金口座情報を返却</li>   </ul> </div> <div style='width:600px; margin:10px;'>   <p style='font-weight:bold; color:#616161;'>クエリパラメーター　振込入金口座発行日</p>   <div style='display:table; margin-left:20px; background-color:#29659b;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9315;</div>   </div>   <div style='display:table; margin-left:20px;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>振込入金口座発行日From</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>   </div>   <div style='display:table; margin-left:20px;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>振込入金口座発行日To</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>   </div> </div> <div style='margin:10px;'>   <ul>     <li style='list-style-type:none;'>&#9312;の場合　絞りこみ条件なし</li>     <li style='list-style-type:none;'>&#9313;の場合　振込入金口座発行日From　～　当日までの振込入金口座情報を返却</li>     <li style='list-style-type:none;'>&#9314;の場合　最も過去となる口座発行日　～　振込入金口座発行日Toまでの振込入金口座情報を返却</li>     <li style='list-style-type:none;'>&#9315;の場合　振込入金口座発行日From　～　振込入金口座発行日Toまでの振込入金口座情報を返却</li>   </ul> </div> <div style='width:600px; margin:10px;'>   <p style='font-weight:bold; color:#616161;'>クエリパラメーター　有効期限</p>   <div style='display:table; margin-left:20px; background-color:#29659b;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9315;</div>   </div>   <div style='display:table; margin-left:20px;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>有効期限From</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>   </div>   <div style='display:table; margin-left:20px;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>有効期限To</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>   </div> </div> <div style='margin:10px;'>   <ul>     <li style='list-style-type:none;'>&#9312;の場合　絞りこみ条件なし</li>     <li style='list-style-type:none;'>&#9313;の場合　有効期限From以上の振込入金口座情報を返却</li>     <li style='list-style-type:none;'>&#9314;の場合　最も過去となる有効期限　～　有効期限Toまでの振込入金口座情報を返却</li>     <li style='list-style-type:none;'>&#9315;の場合　有効期限From　～　有効期限Toまでの振込入金口座情報を返却</li>   </ul> </div> <div style='width:600px; margin:10px;'>   <p style='font-weight:bold; color:#616161;'>クエリパラメーター　入金口座ID、　振込入金口座IDの設定別の仕様</p>   <div style='display:table; margin-left:20px; background-color:#29659b;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>   </div>   <div style='display:table; margin-left:20px;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>入金口座ID</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>   </div>   <div style='display:table; margin-left:20px;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>振込入金口座ID</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>   </div> </div> <div style='margin:10px;'>   <ul>     <li style='list-style-type:none;'>&#9312;の場合　入金口座IDに該当する振込入金口座情報を返却</li>     <li style='list-style-type:none;'>&#9313;の場合　振込入金口座IDに該当する振込入金口座情報を返却</li>     <li style='list-style-type:none;'>&#9314;の場合　振込入金口座IDが入金口座IDに紐付いているか判定を行い、OKであれば入金明細を返却し、NGであればエラーを返却します</li>   </ul> </div> <div style='margin:10px;'>   <p style='font-weight:bold; color:#616161;'>振込入金口座API認証情報</p>   <p style='padding-left:20px;'>提携企業契約時は必須で、この値が設定されていない場合、銀行契約の一覧照会を返却します</p> </div>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.va_list_using_post(x_access_token, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str x_access_token: アクセストークン (required)
        :param VaListRequest body: HTTPリクエストボディ
        :return: VaListResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.va_list_using_post_with_http_info(x_access_token, **kwargs)  # noqa: E501
        else:
            (data) = self.va_list_using_post_with_http_info(x_access_token, **kwargs)  # noqa: E501
            return data

    def va_list_using_post_with_http_info(self, x_access_token, **kwargs):  # noqa: E501
        """振込入金口座一覧照会  # noqa: E501

        <p>発行済みの振込入金口座の一覧を照会します</p> <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4> <div style='margin:10px;'>   <p style='font-weight:bold; color:#616161;'>リクエストボディの振込入金口座IDリスト上限件数</p>   <p style='padding-left:20px;'>500件</p> </div> <div style='margin:10px;'>   <p style='font-weight:bold; color:#616161;'>取得上限件数</p>   <p style='padding-left:20px;'>500件</p>   <p style='padding-left:20px;'>取得できる明細数が500に満たないときは取得できる明細のみを返却します</p>   <p style='padding-left:20px;'>取得できる明細が存在しない場合は「200：OK」とし明細を返却しません</p> </div> <div style='margin:10px;'>   <p style='font-weight:bold; color:#616161;'>ページング</p>   <p style='padding-left:20px;'>2ページ目以降を照会する際は、初回と同じリクエスト内容に、初回レスポンスの次一覧キーを追加してリクエストしてください</p> </div> <div style='margin:10px;'>   <p style='font-weight:bold; color:#616161;'>ソート順</p>   <p style='padding-left:20px;'>発行日時 昇順</p> </div> <div style='width:600px; margin:10px;'>   <p style='font-weight:bold; color:#616161;'>クエリパラメーター　最終入金日</p>   <div style='display:table; margin-left:20px; background-color:#29659b;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9315;</div>   </div>   <div style='display:table; margin-left:20px;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>最終入金日From</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>   </div>   <div style='display:table; margin-left:20px;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>最終入金日To</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>   </div> </div> <div style='margin:10px;'>   <ul>     <li style='list-style-type:none;'>&#9312;の場合　絞りこみ条件なし</li>     <li style='list-style-type:none;'>&#9313;の場合　最終入金日From　～　当日までの振込入金口座情報を返却</li>     <li style='list-style-type:none;'>&#9314;の場合　最も過去となる最終入金日　～　最終入金日Toまでの振込入金口座情報を返却</li>     <li style='list-style-type:none;'>&#9315;の場合　最終入金日From　～　最終入金日Toまでの振込入金口座情報を返却</li>   </ul> </div> <div style='width:600px; margin:10px;'>   <p style='font-weight:bold; color:#616161;'>クエリパラメーター　振込入金口座発行日</p>   <div style='display:table; margin-left:20px; background-color:#29659b;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9315;</div>   </div>   <div style='display:table; margin-left:20px;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>振込入金口座発行日From</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>   </div>   <div style='display:table; margin-left:20px;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>振込入金口座発行日To</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>   </div> </div> <div style='margin:10px;'>   <ul>     <li style='list-style-type:none;'>&#9312;の場合　絞りこみ条件なし</li>     <li style='list-style-type:none;'>&#9313;の場合　振込入金口座発行日From　～　当日までの振込入金口座情報を返却</li>     <li style='list-style-type:none;'>&#9314;の場合　最も過去となる口座発行日　～　振込入金口座発行日Toまでの振込入金口座情報を返却</li>     <li style='list-style-type:none;'>&#9315;の場合　振込入金口座発行日From　～　振込入金口座発行日Toまでの振込入金口座情報を返却</li>   </ul> </div> <div style='width:600px; margin:10px;'>   <p style='font-weight:bold; color:#616161;'>クエリパラメーター　有効期限</p>   <div style='display:table; margin-left:20px; background-color:#29659b;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9315;</div>   </div>   <div style='display:table; margin-left:20px;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>有効期限From</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>   </div>   <div style='display:table; margin-left:20px;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>有効期限To</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>   </div> </div> <div style='margin:10px;'>   <ul>     <li style='list-style-type:none;'>&#9312;の場合　絞りこみ条件なし</li>     <li style='list-style-type:none;'>&#9313;の場合　有効期限From以上の振込入金口座情報を返却</li>     <li style='list-style-type:none;'>&#9314;の場合　最も過去となる有効期限　～　有効期限Toまでの振込入金口座情報を返却</li>     <li style='list-style-type:none;'>&#9315;の場合　有効期限From　～　有効期限Toまでの振込入金口座情報を返却</li>   </ul> </div> <div style='width:600px; margin:10px;'>   <p style='font-weight:bold; color:#616161;'>クエリパラメーター　入金口座ID、　振込入金口座IDの設定別の仕様</p>   <div style='display:table; margin-left:20px; background-color:#29659b;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff;'>日本語名</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9312;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9313;</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; text-align:center; font-size:120%; color:#fff;'>&#9314;</div>   </div>   <div style='display:table; margin-left:20px;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>入金口座ID</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>   </div>   <div style='display:table; margin-left:20px;'>     <div style='display:table-cell; width:160px; padding:9px; border:1px solid #fff; color:#fff; background-color:#29659b;'>振込入金口座ID</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>×</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>     <div style='display:table-cell; width:80px; padding:9px; border:1px solid #fff; background-color:#f8f8f8; font-size:120%; text-align:center;'>○</div>   </div> </div> <div style='margin:10px;'>   <ul>     <li style='list-style-type:none;'>&#9312;の場合　入金口座IDに該当する振込入金口座情報を返却</li>     <li style='list-style-type:none;'>&#9313;の場合　振込入金口座IDに該当する振込入金口座情報を返却</li>     <li style='list-style-type:none;'>&#9314;の場合　振込入金口座IDが入金口座IDに紐付いているか判定を行い、OKであれば入金明細を返却し、NGであればエラーを返却します</li>   </ul> </div> <div style='margin:10px;'>   <p style='font-weight:bold; color:#616161;'>振込入金口座API認証情報</p>   <p style='padding-left:20px;'>提携企業契約時は必須で、この値が設定されていない場合、銀行契約の一覧照会を返却します</p> </div>   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.va_list_using_post_with_http_info(x_access_token, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str x_access_token: アクセストークン (required)
        :param VaListRequest body: HTTPリクエストボディ
        :return: VaListResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['x_access_token', 'body']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method va_list_using_post" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'x_access_token' is set
        if ('x_access_token' not in params or
                params['x_access_token'] is None):
            raise ValueError("Missing the required parameter `x_access_token` when calling `va_list_using_post`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []

        header_params = {}
        if 'x_access_token' in params:
            header_params['x-access-token'] = params['x_access_token']  # noqa: E501

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json;charset=UTF-8'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json;charset=UTF-8'])  # noqa: E501

        # Authentication setting
        auth_settings = []  # noqa: E501

        return self.api_client.call_api(
            '/va/list', 'POST',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='VaListResponse',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)

    def va_holdername_setting_using_post(self, x_access_token, **kwargs):  # noqa: E501
        """振込入金口座追加名義設定  # noqa: E501

        <p>振込入金口座の追加名義設定（変更・削除）を行います</p> <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4> <div style='margin:10px;'>   <p style='font-weight:bold; color:#616161;'>追加名義設定上限数</p>   <p style='padding-left:20px;'>1リクエスト　：　100口座まで</p> </div> <div style='margin-bottom:40px;' />   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.va_holdername_setting_using_post(x_access_token, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str x_access_token: アクセストークン (required)
        :param VaHolderNameSettingRequest body: HTTPリクエストボディ
        :return: VaHolderNameSettingResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """
        kwargs['_return_http_data_only'] = True
        if kwargs.get('async_req'):
            return self.va_holdername_setting_using_post_with_http_info(x_access_token, **kwargs)  # noqa: E501
        else:
            (data) = self.va_holdername_setting_using_post_with_http_info(x_access_token, **kwargs)  # noqa: E501
            return data

    def va_holdername_setting_using_post_with_http_info(self, x_access_token, **kwargs):  # noqa: E501
        """振込入金口座追加名義設定  # noqa: E501

        <p>振込入金口座の追加名義設定（変更・削除）を行います</p> <h4 style='margin-top:30px; border-left: solid 4px #1B2F48; padding: 0.1em 0.5em; color:#1B2F48;'>詳細説明</h4> <div style='margin:10px;'>   <p style='font-weight:bold; color:#616161;'>追加名義設定上限数</p>   <p style='padding-left:20px;'>1リクエスト　：　100口座まで</p> </div> <div style='margin-bottom:40px;' />   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True
        >>> thread = api.va_holdername_setting_using_post_with_http_info(x_access_token, async_req=True)
        >>> result = thread.get()

        :param async_req bool
        :param str x_access_token: アクセストークン (required)
        :param VaHolderNameSettingRequest body: HTTPリクエストボディ
        :return: VaHolderNameSettingResponse
                 If the method is called asynchronously,
                 returns the request thread.
        """

        all_params = ['x_access_token', 'body']  # noqa: E501
        all_params.append('async_req')
        all_params.append('_return_http_data_only')
        all_params.append('_preload_content')
        all_params.append('_request_timeout')

        params = locals()
        for key, val in six.iteritems(params['kwargs']):
            if key not in all_params:
                raise TypeError(
                    "Got an unexpected keyword argument '%s'"
                    " to method va_holdername_setting_using_post" % key
                )
            params[key] = val
        del params['kwargs']
        # verify the required parameter 'x_access_token' is set
        if ('x_access_token' not in params or
                params['x_access_token'] is None):
            raise ValueError("Missing the required parameter `x_access_token` when calling `va_holdername_setting_using_post`")  # noqa: E501

        collection_formats = {}

        path_params = {}

        query_params = []

        header_params = {}
        if 'x_access_token' in params:
            header_params['x-access-token'] = params['x_access_token']  # noqa: E501

        form_params = []
        local_var_files = {}

        body_params = None
        if 'body' in params:
            body_params = params['body']
        # HTTP header `Accept`
        header_params['Accept'] = self.api_client.select_header_accept(
            ['application/json;charset=UTF-8'])  # noqa: E501

        # HTTP header `Content-Type`
        header_params['Content-Type'] = self.api_client.select_header_content_type(  # noqa: E501
            ['application/json;charset=UTF-8'])  # noqa: E501

        # Authentication setting
        auth_settings = []  # noqa: E501

        return self.api_client.call_api(
            '/va/holdername-setting', 'POST',
            path_params,
            query_params,
            header_params,
            body=body_params,
            post_params=form_params,
            files=local_var_files,
            response_type='VaHolderNameSettingResponse',  # noqa: E501
            auth_settings=auth_settings,
            async_req=params.get('async_req'),
            _return_http_data_only=params.get('_return_http_data_only'),
            _preload_content=params.get('_preload_content', True),
            _request_timeout=params.get('_request_timeout'),
            collection_formats=collection_formats)
